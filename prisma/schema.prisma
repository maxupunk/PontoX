generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String?
  login     String?    @unique @default(uuid())
  password  String?    @default(uuid())
  token     String?
  daysWeek  String?
  role      String     @default("funcionario")
  status    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  WorkHours WorkHour[] @relation("UserWorkHour")
  BankHour  BankHour[] @relation("UserBankHour")
  points    Point[]    @relation("UserPoints")

  @@map("users")
}

model BankHour {
  id          Int       @id @default(autoincrement())
  userId      Int
  date        String
  minute      Float
  observation String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  user        User      @relation("UserBankHour", fields: [userId], references: [id])

  @@map("bankHours")
}

model WorkHour {
  id            Int      @id @default(autoincrement())
  date          String
  userId        Int
  entryTime     String
  departureTime String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation("UserWorkHour", fields: [userId], references: [id])
  points        Point[]

  @@map("WorkHours")
}

model Point {
  id                 Int       @id @default(autoincrement())
  userId             Int
  workHourId         Int?
  entryDate          String
  entryTime          String
  entryExpressio     String?
  entryImage         String?
  departureDate      String?
  departureTime      String?
  departureExpressio String?
  departureImage     String?
  observation        String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime? @updatedAt
  WorkHours          WorkHour? @relation(fields: [workHourId], references: [id])
  user               User      @relation("UserPoints", fields: [userId], references: [id])

  @@map("points")
}
